package ezengreen.dto;

import java.io.*;
import java.util.*;
import java.net.URLEncoder;
import com.oreilly.servlet.MultipartRequest;
import com.oreilly.servlet.multipart.DefaultFileRenamePolicy;



import ezengreen.dao.*;
import ezengreen.vo.*;

public class BoardDTO extends DBManager
{
	//게시물을 등록한다.
		//리턴값 : true - 등록성공, false - 등록실패	
		public boolean Insert(BoardVO vo)
		{
			if( this.DBOpen() == false )
			{
				return false;
			}
			
			//Board 테이블에 자료를 등록한다.
			String sql = "";
			sql  = "insert into board (uno,btitle,bkind,bcontent) ";
			sql += "values (";
			sql += "'" + vo.getUno() + "',";
			sql += "'" + this._R(vo.getBtitle()) + "',";
			sql += "'" + vo.getBkind() + "',";
			sql += "'" + this._R(vo.getBcontent()) + "'";
			sql += ")";
			this.RunSQL(sql);

			//등록된 게시물의 번호를 얻는다.
			sql = "select last_insert_id() as bno ";
			this.OpenQuery(sql);
			this.GetNext();
			String bno = this.GetValue("bno");
			vo.setBno(bno);
			
			//첨부파일을 등록한다.
			if(vo.getFname() != null && !vo.getFname().equals(""))
			{
				sql  = "insert into attach (bno,pname,fname) ";
				sql += "values (";
				sql += "'" + vo.getBno() + "',";
				sql += "'" + vo.getPname() + "',";
				sql += "'" + vo.getFname() + "'";
				sql += ") ";
				this.RunSQL(sql);	
			}		
			this.DBClose();
			return true;
		}
		
		//게시물을 삭제한다.
		//리턴값 : true - 삭제성공, false - 삭제실패	
		public boolean Delete(String bno)
		{
			if( this.DBOpen() == false )
			{
				return false;
			}
			
			//첨부파일 삭제 -> 댓글 삭제 -> 게시물 삭제
			String sql = "";
			sql = "delete from file where bno = " + bno;
			this.RunSQL(sql);

			sql = "delete from reply where bno = " + bno;
			this.RunSQL(sql);

			sql = "delete from board where bno = " + bno;
			this.RunSQL(sql);
			
			this.DBClose();
			return true;		
		}
		
		//게시물 정보를 변경한다.
		//리턴값 : true - 변경성공, false - 변경실패	
		public boolean Update(BoardVO vo)
		{
			String uploadPath = "D:\\syt\\team\\ezengreen_05\\src\\main\\webapp\\img";
			
			int size = 10 * 1024 * 1024;

			MultipartRequest multi;
			
			try
			{
				multi = 
					new MultipartRequest(request,uploadPath,size,
						"UTF-8",new DefaultFileRenamePolicy());
			}catch(Exception e)
			{
				response.sendRedirect("index.jsp");
				return;
			}
			
			if( this.DBOpen() == false )
			{
				return false;
			}
			
			//Board 테이블에 자료를 변경한다.
			String sql = "";
			sql  = "update board ";
			sql += "set ";
			sql += "btitle = '" + this._R(vo.getBtitle()) + "', ";
			sql += "bkind = '" + vo.getBkind() + "', ";
			sql += "bnote = '" + this._R(vo.getBcontent()) + "' ";
			sql += "where bno = '" + vo.getBno() + "' ";
			this.RunSQL(sql);
			
			
			//업로드된 파일명을 얻는다.
			Enumeration files = multi.getFileNames();
			
			//삭제 요청한 첨부파일을 지운다.
			if( vo.getFno() != null)
			{
				for(String f : vo.getFno())
				{
					sql = "delete from file where fno = '" + f + "' ";
					this.RunSQL(sql);		
				}
			}
			
			while(files.hasMoreElements()) 
			{
				String name     = (String) files.nextElement();
				String filename = (String) multi.getFilesystemName(name);
				//첨부파일을 등록한다.
				if(filename == null)
				{
					//업로드 된 파일명이 null
					continue;
				}
				
				String phyname    = UUID.randomUUID().toString();
				String srcName    = uploadPath + "/" + filename;
				String targetName = uploadPath + "/" + phyname;
				File srcFile      = new File(srcName);
				File targetFile   = new File(targetName);
				srcFile.renameTo(targetFile);
				
				//out.print("ID : " + name + "<br>");
				//out.print("원래 파일명 : " + filename + "<br>");
				//out.print("저장 파일명 : " + phyname + "<br><hr>");


				// 첨부파일을 등록한다.		
				if(filename != null)
				{
						
					// 기존 첨부파일을 모두 삭제한다. 
					//sql = "delete from file where bno = '" + bno + "' ";
					//System.out.println(sql);
					//stmt.executeUpdate(sql);
						
					// 새로운 첨부파일을 등록한다.
					sql  = "insert into file (bno,pname,fname) ";
					sql += "values (";
					sql += "'" + bno + "',";
					sql += "'" + phyname + "',";
					sql += "'" + filename + "'";
					sql += ") ";
					System.out.println(sql);
					stmt.executeUpdate(sql);	
				}
			}
			
			this.DBClose();
			return true;		
		}
		
}
